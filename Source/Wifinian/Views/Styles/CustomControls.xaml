<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					xmlns:sys="clr-namespace:System;assembly=mscorlib"
					xmlns:controls="clr-namespace:Wifinian.Views.Controls">

	<!-- MovingButton -->
	<Style x:Key="RoundFocusVisual">
		<Setter Property="Control.Template">
			<Setter.Value>
				<ControlTemplate>
					<Border>
						<Ellipse Margin="1"
								 StrokeThickness="1"
								 Stroke="Black"
								 StrokeDashArray="1 2"/>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="RollingStyle" TargetType="{x:Type controls:MovingButton}">
		<Style.Resources>
			<!-- Width:100, Height:100, Center:50,50 -->
			<PathGeometry x:Key="ArcForm">
				<PathFigure StartPoint="93.3,25">
					<ArcSegment Point="50,0"
								Size="50,50"
								IsLargeArc="True"
								SweepDirection="Clockwise"
								RotationAngle="0"/>
				</PathFigure>
			</PathGeometry>

			<Duration x:Key="MovingDuration">0:0:0.6</Duration>
		</Style.Resources>

		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="Foreground" Value="{StaticResource App.Foreground}"/>
		<Setter Property="FocusVisualStyle" Value="{StaticResource RoundFocusVisual}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type controls:MovingButton}">
					<Grid>
						<Grid Background="{TemplateBinding Background}">
							<Path x:Name="ark"
								  Data="{StaticResource ArcForm}" Stretch="Uniform"
								  Stroke="{TemplateBinding Foreground}" StrokeThickness="1.6"
								  Opacity="0.6"
								  RenderTransformOrigin="0.5 0.5">
								<Path.RenderTransform>
									<RotateTransform Angle="0"/>
								</Path.RenderTransform>
							</Path>
						</Grid>

						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal"/>
								<VisualState x:Name="MouseOver">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="ark"
														 Storyboard.TargetProperty="(UIElement.Opacity)"
														 To="0.8"
														 Duration="0:0:0.1"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Pressed">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="ark"
														 Storyboard.TargetProperty="(UIElement.Opacity)"
														 To="0.8"
														 Duration="0:0:0.1"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="ark"
														 Storyboard.TargetProperty="(UIElement.Opacity)"
														 To="0.4"
														 Duration="0:0:0.1"/>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="MovingStates">
								<VisualState x:Name="MovingOff"/>
								<VisualState x:Name="MovingOn">
									<Storyboard>
										<Storyboard>
											<DoubleAnimation Storyboard.TargetName="ark"
															 Storyboard.TargetProperty="(UIElement.Opacity)"
															 To="1.0"
															 Duration="0:0:0.1"/>
										</Storyboard>
										<DoubleAnimation Storyboard.TargetName="ark"
														 Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)"
														 From="0" To="360"
														 RepeatBehavior="1x"
														 Duration="{StaticResource MovingDuration}"/>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="WindingStyle" TargetType="{x:Type controls:MovingButton}">
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="Foreground" Value="{StaticResource App.Foreground}"/>
		<Setter Property="FocusVisualStyle" Value="{StaticResource RoundFocusVisual}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type controls:MovingButton}">
					<Grid>
						<Grid Background="{TemplateBinding Background}">
							<Ellipse x:Name="ring" Stretch="Uniform"
									 Stroke="{TemplateBinding Foreground}"
									 Opacity="0.6"
									 StrokeThickness="1.6"/>
							<Ellipse x:Name="ark" Stretch="Uniform"
									 Stroke="{TemplateBinding Foreground}"
									 StrokeThickness="1.6" StrokeDashArray="100,100" StrokeDashOffset="100"
									 RenderTransformOrigin="0.5,0.5">
								<Ellipse.RenderTransform>
									<RotateTransform Angle="-90"/>
								</Ellipse.RenderTransform>
							</Ellipse>
						</Grid>

						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal"/>
								<VisualState x:Name="MouseOver">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="ring"
														 Storyboard.TargetProperty="(UIElement.Opacity)"
														 To="0.8"
														 Duration="0:0:0.1"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Pressed">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="ring"
														 Storyboard.TargetProperty="(UIElement.Opacity)"
														 To="0.8"
														 Duration="0:0:0.1"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="ring"
														 Storyboard.TargetProperty="(UIElement.Opacity)"
														 To="0.4"
														 Duration="0:0:0.1"/>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="MovingStates">
								<VisualState x:Name="MovingOff"/>
								<VisualState x:Name="MovingOn">
									<Storyboard>
										<!-- Width:26, Height:26 -->
										<!-- The speed of leading edge is 60 degrees / 0.1 sec. -->
										<DoubleAnimation Storyboard.TargetName="ark"
														 Storyboard.TargetProperty="(Shape.StrokeDashOffset)"
														 From="100" To="92"
														 RepeatBehavior="1x"
														 Duration="0:0:0.1"/>
										<!-- The combined speed of leading edge is the same (660 degrees / 1.1 sec). -->
										<DoubleAnimation Storyboard.TargetName="ark"
														 Storyboard.TargetProperty="(Shape.StrokeDashOffset)"
														 From="92" To="52"
														 RepeatBehavior="1x"
														 BeginTime="0:0:0.1"
														 Duration="0:0:1.1"/>
										<DoubleAnimation Storyboard.TargetName="ark"
														 Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)"
														 From="-90" To="270"
														 RepeatBehavior="1x"
														 BeginTime="0:0:0.1"
														 Duration="0:0:1.1"/>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- MovingControl -->
	<Style x:Key="BubbleStyle" TargetType="{x:Type controls:MovingControl}">
		<Style.Resources>
			<!-- Margin.Start = (Diameter.End - Diameter.Start) / 2 -->
			<sys:Double x:Key="Diameter.Start">20</sys:Double>
			<sys:Double x:Key="Diameter.End">200</sys:Double>
			<sys:Double x:Key="Margin.Start">90</sys:Double>
			<sys:Double x:Key="Margin.End">0</sys:Double>
			<sys:Double x:Key="Stroke.Start">4</sys:Double>
			<sys:Double x:Key="Stroke.End">2</sys:Double>
			<Duration x:Key="MovingDuration">0:0:1.2</Duration>
		</Style.Resources>

		<Setter Property="Foreground" Value="{StaticResource App.Foreground}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type controls:MovingControl}">
					<Grid>
						<Canvas Width="{StaticResource Diameter.End}" Height="{StaticResource Diameter.End}"
								IsHitTestVisible="False">
							<Ellipse x:Name="circle"
									 Opacity="0"
									 Width="{StaticResource Diameter.Start}" Height="{StaticResource Diameter.Start}"
									 Canvas.Left="{StaticResource Margin.Start}" Canvas.Top="{StaticResource Margin.Start}"
									 Stroke="{TemplateBinding Foreground}"
									 StrokeThickness="{StaticResource Stroke.Start}"/>
						</Canvas>

						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="MovingStates">
								<VisualState x:Name="MovingOff"/>
								<VisualState x:Name="MovingOn">
									<Storyboard>
										<DoubleAnimation
											Storyboard.TargetName="circle"
											Storyboard.TargetProperty="(UIElement.Opacity)"
											Duration="{StaticResource MovingDuration}"
											From="1" To="0"/>
										<DoubleAnimation
											Storyboard.TargetName="circle"
											Storyboard.TargetProperty="(FrameworkElement.Width)"
											Duration="{StaticResource MovingDuration}"
											From="{StaticResource Diameter.Start}" To="{StaticResource Diameter.End}"/>
										<DoubleAnimation
											Storyboard.TargetName="circle"
											Storyboard.TargetProperty="(FrameworkElement.Height)"
											Duration="{StaticResource MovingDuration}"
											From="{StaticResource Diameter.Start}" To="{StaticResource Diameter.End}"/>
										<DoubleAnimation
											Storyboard.TargetName="circle"
											Storyboard.TargetProperty="(Canvas.Left)"
											Duration="{StaticResource MovingDuration}"
											From="{StaticResource Margin.Start}" To="{StaticResource Margin.End}"/>
										<DoubleAnimation
											Storyboard.TargetName="circle"
											Storyboard.TargetProperty="(Canvas.Top)"
											Duration="{StaticResource MovingDuration}"
											From="{StaticResource Margin.Start}" To="{StaticResource Margin.End}"/>
										<DoubleAnimation
											Storyboard.TargetName="circle"
											Storyboard.TargetProperty="(Shape.StrokeThickness)"
											Duration="{StaticResource MovingDuration}"
											From="{StaticResource Stroke.Start}" To="{StaticResource Stroke.End}"/>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- ProfileContentControl -->
	<Style TargetType="{x:Type controls:ProfileContentControl}">
		<Setter Property="Background" Value="{StaticResource Profile.Background.Normal}"/>
		<Setter Property="Foreground" Value="{StaticResource App.Foreground}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type controls:ProfileContentControl}">
					<Grid>
						<Border x:Name="border"
								Background="{TemplateBinding Background}"
								SnapsToDevicePixels="True"
								UseLayoutRounding="True">
							<ContentPresenter x:Name="contentPresenter"
											  Margin="{TemplateBinding Padding}"
											  Content="{TemplateBinding Content}"
											  ContentTemplate="{TemplateBinding ContentTemplate}"/>
						</Border>

						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal"/>
								<VisualState x:Name="NormalSelected">
									<Storyboard>
										<ColorAnimation Storyboard.TargetName="border"
														Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)"
														To="{DynamicResource Profile.Background.NormalSelectedColor}"
														Duration="0:0:0.1"/>
									</Storyboard>
								</VisualState>

								<VisualState x:Name="Available">
									<Storyboard>
										<ColorAnimation Storyboard.TargetName="border"
														Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)"
														To="{StaticResource Profile.Background.AvailableColor}"
														Duration="0:0:0.1"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="AvailableSelected">
									<Storyboard>
										<ColorAnimation Storyboard.TargetName="border"
														Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)"
														To="{DynamicResource Profile.Background.AvailableSelectedColor}"
														Duration="0:0:0.1"/>
									</Storyboard>
								</VisualState>

								<VisualState x:Name="Connected">
									<Storyboard>
										<ColorAnimation Storyboard.TargetName="border"
														Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)"
														To="{StaticResource Profile.Background.ConnectedColor}"
														Duration="0:0:0.1"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="ConnectedSelected">
									<Storyboard>
										<ColorAnimation Storyboard.TargetName="border"
														Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)"
														To="{DynamicResource Profile.Background.ConnectedSelectedColor}"
														Duration="0:0:0.1"/>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- SignalProgressBar -->
	<Style x:Key="ArcStyle" TargetType="{x:Type controls:SignalProgressBar}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type controls:SignalProgressBar}">
					<Grid Width="18" Height="18">
						<Path x:Name="PART_LevelOne"
							  Stroke="DarkGray" StrokeThickness="2.7">
							<Path.Data>
								<PathGeometry>
									<PathFigure StartPoint="16,18">
										<ArcSegment Point="18,16"
													Size="2,2"
													IsLargeArc="False" SweepDirection="Clockwise"/>
									</PathFigure>
								</PathGeometry>
							</Path.Data>
						</Path>

						<Path x:Name="PART_LevelTwo"
							  Stroke="DarkGray" StrokeThickness="2">
							<Path.Data>
								<PathGeometry>
									<PathFigure StartPoint="12,18">
										<ArcSegment Point="18,12"
													Size="6,6"
													IsLargeArc="False" SweepDirection="Clockwise"/>
									</PathFigure>
								</PathGeometry>
							</Path.Data>
						</Path>

						<Path x:Name="PART_LevelThree"
							  Stroke="DarkGray" StrokeThickness="2">
							<Path.Data>
								<PathGeometry>
									<PathFigure StartPoint="8,18">
										<ArcSegment Point="18,8"
													Size="10,10"
													IsLargeArc="False" SweepDirection="Clockwise"/>
									</PathFigure>
								</PathGeometry>
							</Path.Data>
						</Path>

						<Path x:Name="PART_LevelFour"
							  Stroke="DarkGray" StrokeThickness="2">
							<Path.Data>
								<PathGeometry>
									<PathFigure StartPoint="4,18">
										<ArcSegment Point="18,4"
													Size="14,14"
													IsLargeArc="False" SweepDirection="Clockwise"/>
									</PathFigure>
								</PathGeometry>
							</Path.Data>
						</Path>

						<Path x:Name="PART_LevelFive"
							  Stroke="DarkGray" StrokeThickness="2">
							<Path.Data>
								<PathGeometry>
									<PathFigure StartPoint="0,18">
										<ArcSegment Point="18,0"
													Size="18,18"
													IsLargeArc="False" SweepDirection="Clockwise"/>
									</PathFigure>
								</PathGeometry>
							</Path.Data>
						</Path>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- SimpleToggleButton -->
	<Style x:Key="MenuToggleButtonStyle" TargetType="{x:Type controls:SimpleToggleButton}">
		<Setter Property="Background" Value="{StaticResource ToggleButton.Background.Normal}"/>
		<Setter Property="BorderThickness" Value="0"/>
		<Setter Property="Padding" Value="8,0"/>
		<Setter Property="Foreground" Value="{StaticResource ToggleButton.Foreground.Normal}"/>
		<Setter Property="FontSize" Value="12"/>
		<Setter Property="FontWeight" Value="SemiBold"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type controls:SimpleToggleButton}">
					<Grid>
						<Border x:Name="border"
								Background="{TemplateBinding Background}"
								BorderBrush="{TemplateBinding BorderBrush}"
								BorderThickness="{TemplateBinding BorderThickness}"
								SnapsToDevicePixels="True"
								UseLayoutRounding="True">
							<ContentPresenter x:Name="contentPresenter"
											  Margin="{TemplateBinding Padding}"
											  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
											  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
											  Content="{TemplateBinding Content}"/>
						</Border>

						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal"/>
								<VisualState x:Name="MouseOver">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="border"
														 Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Opacity)"
														 To="0.8"
														 Duration="0:0:0.1"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Pressed">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="border"
														 Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Opacity)"
														 To="1.0"
														 Duration="0:0:0.1"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="border"
														 Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Opacity)"
														 To="0.8"
														 Duration="0:0:0"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Checked">
									<Storyboard>
										<ColorAnimation Storyboard.TargetName="border"
														Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)"
														To="{StaticResource ToggleButton.Background.CheckedColor}"
														Duration="0:0:0.1"/>
										<DoubleAnimation Storyboard.TargetName="border"
														 Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Opacity)"
														 To="1.0"
														 Duration="0:0:0.1"/>
										<DoubleAnimation Storyboard.TargetName="border"
														 Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Opacity)"
														 To="1.0"
														 Duration="0:0:0.1"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Unchecked"/>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- IconButton -->
	<PathGeometry x:Key="UpForm" Figures="M 0,1 L1,0 2,1"/>
	<PathGeometry x:Key="DownForm" Figures="M 0,0 L1,1 2,0"/>
	<PathGeometry x:Key="DeleteForm" Figures="M 0,0 2,2 M 2,0 0,2"/>

	<Style x:Key="IconButtonStyle" TargetType="{x:Type controls:IconButton}">
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="BorderBrush" Value="{StaticResource Button.Foreground}"/>
		<Setter Property="BorderThickness" Value="2"/>
		<Setter Property="Padding" Value="0,0,8,0"/>
		<Setter Property="Foreground" Value="{StaticResource Button.Foreground}"/>
		<Setter Property="FontSize" Value="13"/>
		<Setter Property="FontWeight" Value="SemiBold"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type controls:IconButton}">
					<Grid>
						<Border x:Name="border"
								Background="{TemplateBinding Background}"
								BorderBrush="{TemplateBinding BorderBrush}"
								BorderThickness="{TemplateBinding BorderThickness}"
								SnapsToDevicePixels="True" UseLayoutRounding="True">
							<StackPanel Orientation="Horizontal">
								<Path x:Name="icon"
									  Width="14" Height="14" Margin="8,0,6,0"
									  Data="{TemplateBinding IconData}" Stretch="Uniform"
									  Stroke="{TemplateBinding Foreground}" StrokeThickness="1.6"/>
								<ContentPresenter x:Name="content"
												  Margin="{TemplateBinding Padding}"
												  VerticalAlignment="Center"
												  TextBlock.Foreground="{TemplateBinding Foreground}"
												  Content="{TemplateBinding Content}"/>
							</StackPanel>
						</Border>

						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal"/>
								<VisualState x:Name="MouseOver">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="border"
														 Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Opacity)"
														 To="0.8"
														 Duration="0:0:0.1"/>
										<DoubleAnimation Storyboard.TargetName="icon"
														 Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Opacity)"
														 To="0.8"
														 Duration="0:0:0.1"/>
										<DoubleAnimation Storyboard.TargetName="content"
														 Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Opacity)"
														 To="0.8"
														 Duration="0:0:0.1"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Pressed">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="border"
														 Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Opacity)"
														 To="1.0"
														 Duration="0:0:0.1"/>
										<DoubleAnimation Storyboard.TargetName="icon"
														 Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Opacity)"
														 To="1.0"
														 Duration="0:0:0.1"/>
										<DoubleAnimation Storyboard.TargetName="content"
														 Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Opacity)"
														 To="1.0"
														 Duration="0:0:0.1"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="border"
														 Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Opacity)"
														 To="0.4"
														 Duration="0:0:0"/>
										<DoubleAnimation Storyboard.TargetName="icon"
														 Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Opacity)"
														 To="0.4"
														 Duration="0:0:0"/>
										<DoubleAnimation Storyboard.TargetName="content"
														 Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Opacity)"
														 To="0.4"
														 Duration="0:0:0"/>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

</ResourceDictionary>