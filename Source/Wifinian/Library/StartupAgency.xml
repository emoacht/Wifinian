<?xml version="1.0"?>
<doc>
    <assembly>
        <name>StartupAgency</name>
    </assembly>
    <members>
        <member name="T:StartupAgency.Bridge.StartupData">
            <summary>
            Startup data
            </summary>
        </member>
        <member name="P:StartupAgency.Bridge.StartupData.LastStartTime">
            <summary>
            Last start time of application
            </summary>
            <remarks>
            The underlying value of this property will be updated when accessed the first time after
            system boot.
            </remarks>
        </member>
        <member name="T:StartupAgency.Bridge.StartupTaskBroker">
            <summary>
            StartupTask broker
            </summary>
            <remarks>
            This class wraps <see cref="T:Windows.ApplicationModel.StartupTask"/> which is only available
            on Windows 10 (version 10.0.14393.0) or newer.
            </remarks>
        </member>
        <member name="M:StartupAgency.Bridge.StartupTaskBroker.CanEnable(System.String)">
            <summary>
            Determines whether the startup task for a specified AppX package can be enabled.
            </summary>
            <param name="taskId">Startup task ID</param>
            <returns>True if the startup task can be enabled</returns>
        </member>
        <member name="M:StartupAgency.Bridge.StartupTaskBroker.IsEnabled(System.String)">
            <summary>
            Determines whether the startup task for a specified AppX package has been enabled.
            </summary>
            <param name="taskId">Startup task ID</param>
            <returns>True if the startup task has been enabled</returns>
        </member>
        <member name="M:StartupAgency.Bridge.StartupTaskBroker.Enable(System.String)">
            <summary>
            Enables the startup task for a specified AppX package.
            </summary>
            <param name="taskId">Startup task ID</param>
            <returns>True if the startup task is enabled</returns>
        </member>
        <member name="M:StartupAgency.Bridge.StartupTaskBroker.Disable(System.String)">
            <summary>
            Disables the startup task for a specified AppX package.
            </summary>
            <param name="taskId">Startup task ID</param>
        </member>
        <member name="T:StartupAgency.Helper.OsVersion">
            <summary>
            OS version information
            </summary>
        </member>
        <member name="P:StartupAgency.Helper.OsVersion.Is7OrGreater">
            <summary>
            Whether OS is Windows 7 (6.1) or greater
            </summary>
        </member>
        <member name="P:StartupAgency.Helper.OsVersion.Is8OrGreater">
            <summary>
            Whether OS is Windows 8 (6.2) or greater
            </summary>
        </member>
        <member name="P:StartupAgency.Helper.OsVersion.Is8Point1OrGreater">
            <summary>
            Whether OS is Windows 8.1 (6.3) or greater
            </summary>
        </member>
        <member name="P:StartupAgency.Helper.OsVersion.Is10OrGreater">
            <summary>
            Whether OS is Windows 10 (10.0.10240) or greater
            </summary>
        </member>
        <member name="P:StartupAgency.Helper.OsVersion.Is10Build14393OrGreater">
            <summary>
            Whether OS is Windows 10 (10.0.14393) or greater
            </summary>
        </member>
        <member name="P:StartupAgency.Helper.OsVersion.Is11OrGreater">
            <summary>
            Whether OS is Windows 11 (10.0.22000) or greater
            </summary>
        </member>
        <member name="T:StartupAgency.Storage.SettingsAccessor">
            <summary>
            Accessor to <see cref="P:Windows.Storage.ApplicationData.LocalSettings"/> or <see cref="P:Windows.Storage.ApplicationData.RoamingSettings"/>
            </summary>
            <remarks>
            Data types that can be stored/retrieved are shown at:
            https://docs.microsoft.com/en-us/windows/uwp/design/app-settings/store-and-retrieve-app-data#types-of-app-data
            byte[] and Enum are also usable.
            </remarks>
        </member>
        <member name="T:StartupAgency.Worker.BridgeWorker">
            <summary>
            Startup task (AppX) worker
            </summary>
        </member>
        <member name="F:StartupAgency.Worker.BridgeWorker._taskId">
            <summary>
            Startup task ID
            </summary>
            <remarks>Startup task ID must match that in AppxManifest.xml.</remarks>
        </member>
        <member name="M:StartupAgency.Worker.IStartupWorker.IsStartedOnSignIn">
            <summary>
            Determines whether caller instance is presumed to have started on sign in.
            </summary>
        </member>
        <member name="M:StartupAgency.Worker.IStartupWorker.CanRegister">
            <summary>
            Determines whether caller instance can be registered in startup.
            </summary>
        </member>
        <member name="M:StartupAgency.Worker.IStartupWorker.IsRegistered">
            <summary>
            Determines whether caller instance is registered in startup.
            </summary>
        </member>
        <member name="M:StartupAgency.Worker.IStartupWorker.Register">
            <summary>
            Registers caller instance to startup.
            </summary>
        </member>
        <member name="M:StartupAgency.Worker.IStartupWorker.Unregister">
            <summary>
            Unregisters caller instance from startup.
            </summary>
        </member>
        <member name="T:StartupAgency.Worker.RegistryWorker">
            <summary>
            Registry worker
            </summary>
        </member>
        <member name="M:StartupAgency.PipeHolder.Create(System.String[])">
            <summary>
            Creates <see cref="T:System.Threading.Semaphore"/> to start named pipes.
            </summary>
            <param name="args">Arguments to another instance</param>
            <returns>
            <para>success: True if no other instance exists and this instance successfully creates</para>
            <para>response: Response from another instance if that instance exists and returns an response</para>
            </returns>
        </member>
        <member name="M:StartupAgency.PipeHolder.Release">
            <summary>
            Releases <see cref="T:System.Threading.Semaphore"/> to stop named pipes.
            </summary>
        </member>
        <member name="T:StartupAgency.PlatformInfo">
            <summary>
            Platform information
            </summary>
        </member>
        <member name="P:StartupAgency.PlatformInfo.IsPackaged">
            <summary>
            Whether this assembly is packaged in AppX package
            </summary>
        </member>
        <member name="T:StartupAgency.StartupAgent">
            <summary>
            Startup agent
            </summary>
        </member>
        <member name="M:StartupAgency.StartupAgent.Start(System.String,System.String,System.Collections.Generic.IReadOnlyList{System.String})">
            <summary>
            Starts.
            </summary>
            <param name="name">Name</param>
            <param name="startupTaskId">Startup task ID</param>
            <param name="args">Arguments to another instance</param>
            <returns>
            <para>success: True if no other instance exists and this instance successfully starts</para>
            <para>response: Response from another instance if that instance exists and returns an response</para> 
            </returns>
            <remarks>Startup task ID must match that in AppxManifest.xml.</remarks>
        </member>
        <member name="M:StartupAgency.StartupAgent.Dispose">
            <summary>
            Dispose
            </summary>
        </member>
        <member name="M:StartupAgency.StartupAgent.Dispose(System.Boolean)">
            <summary>
            Dispose
            </summary>
        </member>
        <member name="P:StartupAgency.StartupAgent.IsPackaged">
            <summary>
            Whether this assembly is packaged in AppX package
            </summary>
        </member>
        <member name="P:StartupAgency.StartupAgent.HandleRequestAsync">
            <summary>
            Delegate to asynchronously handle the arguments from another instance
            </summary>
            <remarks>
            This delegate will be called by a thread other than that instantiated this object.
            Accordingly, the appropriate use of dispatcher is required.
            </remarks>
        </member>
        <member name="P:StartupAgency.StartupAgent.Options">
            <summary>
            Options
            </summary>
        </member>
        <member name="M:StartupAgency.StartupAgent.IsWindowShowExpected">
            <summary>
            Determines whether caller instance is expected to show its window.
            </summary>
            <returns>True if expected to be show its window</returns>
        </member>
        <member name="M:StartupAgency.StartupAgent.IsStartedOnSignIn">
            <summary>
            Determines whether caller instance is presumed to have started on sign in.
            </summary>
            <returns>True if presumed to have started on sign in</returns>
        </member>
        <member name="M:StartupAgency.StartupAgent.CanRegister">
            <summary>
            Determines whether caller instance can be registered in startup.
            </summary>
            <returns>True if can be registered</returns>
        </member>
        <member name="M:StartupAgency.StartupAgent.IsRegistered">
            <summary>
            Determines whether caller instance has been registered in startup.
            </summary>
            <returns>True if has been already registered</returns>
        </member>
        <member name="M:StartupAgency.StartupAgent.Register">
            <summary>
            Registers caller instance to startup.
            </summary>
            <returns>True if successfully registers</returns>
        </member>
        <member name="M:StartupAgency.StartupAgent.Unregister">
            <summary>
            Unregisters caller instance from startup.
            </summary>
        </member>
    </members>
</doc>
